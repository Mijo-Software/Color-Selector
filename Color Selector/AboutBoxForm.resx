<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
  <metadata name="toolTipAboutBox.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="okButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAHCSURBVDhPpZFZL0NBHMW94X4Xe6vW2BJSa6ql1OWW
        Wkvjheptq9VSgliuR7GvkdhiDSLxqJYKn0F8CdVj5oqG9tri4TeZOfM//5k5EwHgX0iKf0FS/A7tUqlQ
        PlvofF+HFXxH5WKJYNo3oG2Hg1LI4akmWShFxUKx0LHXgIl7NzyXVujXtMgaSLFJFoeimS8SjLt6jN25
        MHrnRP16FbI9qUhzyKKCRcYzLq/lmG36aKSo54oEeuURnxPDPod4cqZb4U/tTYqi+2/mUy6j+Yh94i9M
        4DYrOt/NJCyhdbsOw7e9GLq1g1utRIYr2Z9iTxTNYoO2k7r85sOax0EvjzFfH3RrKj8Jq1M1oxxt2WIx
        eGOH55pH7YoG6X1yv8KWEDSLDZoOdNGG3WqYz9sx+TAAj9cK454epgMD+r0WuK8tYJfVSHPKXpKtn81i
        AzqwG2qGnAzToUF859CNDa4rM1xeM3RL5TSsgJyPDzNTghMSFqOaVqJxswbuqx44LrtQvaACCSsgt8RJ
        mimfFsqpXKZgPJtcWQPtfBlIWAFZT+yXZkqYQP6XyexXgIT1nGSOjQzdD0VSJGExid0xP5opkuLvQcQr
        vqKpPDRN9lYAAAAASUVORK5CYII=
</value>
  </data>
</root>