<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ml6TI2tkUgUAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="toolTipAboutBox.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="okButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAHCSURBVDhPpZFZL0NBHMW94X4Xe6vW2BJSa6ql1OWW
        Wkvjheptq9VSgliuR7GvkdhiDSLxqJYKn0F8CdVj5oqG9tri4TeZOfM//5k5EwHgX0iKf0FS/A7tUqlQ
        PlvofF+HFXxH5WKJYNo3oG2Hg1LI4akmWShFxUKx0LHXgIl7NzyXVujXtMgaSLFJFoeimS8SjLt6jN25
        MHrnRP16FbI9qUhzyKKCRcYzLq/lmG36aKSo54oEeuURnxPDPod4cqZb4U/tTYqi+2/mUy6j+Yh94i9M
        4DYrOt/NJCyhdbsOw7e9GLq1g1utRIYr2Z9iTxTNYoO2k7r85sOax0EvjzFfH3RrKj8Jq1M1oxxt2WIx
        eGOH55pH7YoG6X1yv8KWEDSLDZoOdNGG3WqYz9sx+TAAj9cK454epgMD+r0WuK8tYJfVSHPKXpKtn81i
        AzqwG2qGnAzToUF859CNDa4rM1xeM3RL5TSsgJyPDzNTghMSFqOaVqJxswbuqx44LrtQvaACCSsgt8RJ
        mimfFsqpXKZgPJtcWQPtfBlIWAFZT+yXZkqYQP6XyexXgIT1nGSOjQzdD0VSJGExid0xP5opkuLvQcQr
        vqKpPDRN9lYAAAAASUVORK5CYII=
</value>
  </data>
</root>